#+TITLE: Computer Architecture Task 2
* Authority
This is the second homework of Computer Architecture, and the author is Lmxyy.
* Aim
Implement a *Risk-v* CPU using hardware description language(HDL).
** Instructions [56%]
- [X] LUI
- [ ] AUIPC
- [X] JAL
- [X] JALR
- [ ] BEQ
- [ ] BNE
- [ ] BLT
- [ ] BGE
- [ ] BLTU
- [ ] BGEU
- [X] ADDI
- [X] SLTI
- [X] SLTIU
- [X] XORI
- [X] ORI
- [X] ANDI
- [X] SLLI
- [X] SRLI
- [X] SRAI
- [X] ADD
- [X] SUB
- [X] SLL
- [X] SLT
- [X] SLTU
- [X] XOR
- [X] SRL
- [X] SRA
- [X] OR
- [X] AND
- [ ] LB
- [ ] LH
- [ ] LW
- [ ] LBU
- [ ] LHU
- [ ] SB
- [ ] SH
- [ ] SW
- [ ] FENCE
- [ ] FENCE.I
* Format of Riscv32 Assembler
|-------------+------------------------------|
| Instruction | Format                       |
|-------------+------------------------------|
| LUI         | ~lui rd, imm(20bits)~        |
|-------------+------------------------------|
| ADDI        | ~addi rd, rs, imm(11bits)~   |
|-------------+------------------------------|
| SLTI        | ~slti rd, rs, imm(11bits)~   |
|-------------+------------------------------|
| SLTIU       | ~sltiu rd, rs, imm(11bits)~  |
|-------------+------------------------------|
| XORI        | ~xori rd, rs, imm(11bits)~   |
|-------------+------------------------------|
| ORI         | ~ori rd, rs, imm(11bits)~    |
|-------------+------------------------------|
| ANDI        | ~andi rd, rs, imm(11bits)~   |
|-------------+------------------------------|
| SLLI        | ~slli rd, rs, imm(5bits)~    |
|-------------+------------------------------|
| SRAI        | ~srai rd, rs, imm(5bits)~    |
|-------------+------------------------------|
| ADD         | ~add rd, rs1, rs2~           |
|-------------+------------------------------|
| SUB         | ~sub rd, rs1, rs2~           |
|-------------+------------------------------|
| SLL         | ~sll rd, rs1, rs2~           |
|-------------+------------------------------|
| SLT         | ~slt rd, rs1, rs2~           |
|-------------+------------------------------|
| SLTU        | ~sltu rd, rs1, rs2~          |
|-------------+------------------------------|
| XOR         | ~xor rd, rs1, rs2~           |
|-------------+------------------------------|
| SRL         | ~srl rd, rs1, rs2~           |
|-------------+------------------------------|
| SRA         | ~sra rd, rs1, rs2~           |
|-------------+------------------------------|
| OR          | ~or rd, rs1, rs2~            |
|-------------+------------------------------|
| AND         | ~and rd, rs1, rs2~           |
|-------------+------------------------------|
| JAL         | ~jal rt, offset(20bits)~     |
|-------------+------------------------------|
| JALR        | ~jalr rt, rs, offset(12bits) |
|-------------+------------------------------|
* Feature
+ The instruction set arthitecture(ISA) is RV32I Base Integer Instruction Set, Version 2.0.
+ The implementation technology is FPGA.
+ The HDL is Verilog HDL.
* Reference
+ [[https://github.com/sxtyzhangzk/mips-cpu/][助教的MIPS CPU实现]]
+ [[https://github.com/riscv/riscv-gnu-toolchain][GNU toolchain for RISC-V, including GCC(Newlib)]]
+ [[https://github.com/sxtyzhangzk/cpu-judge][cpu-judge]]

